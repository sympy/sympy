# ------------------------------------------------------------------ #
#                                                                    #
#           SymPy CI script for Github Actions                       #
#                                                                    #
#   Runs each time a pull request is opened, pushed or merged        #
#                                                                    #
# ------------------------------------------------------------------ #

name: test
on: [push, pull_request]
jobs:

  # -------------------- Code quality ------------------------------ #

  code-quality:

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          # Clone full git history (needed for AUTHORS/mailmap)
          fetch-depth: '0'

      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath flake8 mypy

      - name: Basic code quality tests
        run: bin/test quality

      - name: Run flake8 on the sympy package
        run: flake8 sympy

      - name: Run mypy on the sympy package
        run: mypy sympy

      - name: Detect invalid escapes like '\e'
        run: python -We:invalid -We::SyntaxWarning -m compileall -f -q sympy/

      - name: Test all modules are listed in setup.py
        run: bin/test_setup.py

      # -- temporarily disabled -- #
      # These checks were too difficult for new contributors. They will
      # need to be made easier to work with before they are reenabled.

      #- name: Test for ambiguous author information in commits
      #  run: bin/mailmap_update.py

      #- name: Make sure all commits have an associated author
      #  run: bin/authors_update.py

  # -------------------- Doctests latest Python -------------------- #

  doctests-latest:
    needs: code-quality

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath
      - run: bin/doctest --force-colors
      - run: examples/all.py -q

  # -------------------- Test split 1/2 latest Python -------------- #

  tests1-latest:
    needs: code-quality

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath
      - run: bin/test --force-colors --split=1/2

  # -------------------- Test split 2/2 latest Python -------------- #

  tests2-latest:
    needs: code-quality

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath
      - run: bin/test --force-colors --split=2/2

  # -------------------- Optional dependency tests ----------------- #

  optional-dependencies:
    needs: code-quality

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: sudo apt install antlr4 libgfortran5 gfortran libmpfr-dev libmpc-dev
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath gmpy2 matplotlib numpy scipy pymc3 aesara ipython \
                         symengine cython llvmlite wurlitzer \
                         autowrap numexpr 'antlr4-python3-runtime==4.7.*'
      # Test external imports
      - run: bin/test_external_imports.py
      - run: bin/test_submodule_imports.py
      - run: bin/test_executable.py
      # Test modules with specific dependencies
      - run: bin/test_optional_dependencies.py

  # -------------------- Tensorflow tests -------------------------- #

  tensorflow:
    needs: code-quality

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath numpy scipy tensorflow
      # Test modules that can use tensorflow
      - run: bin/test_tensorflow.py

  # -------------------- SymEngine tests --------------------------- #

  symengine:
    needs: code-quality

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath numpy symengine
      # Test modules that can use tensorflow
      - run: bin/test_symengine.py
        env:
          USE_SYMENGINE: '1'

  # -------------------- Slow test split 1/2 ----------------------- #

  slow1:
    needs: [doctests-latest, tests1-latest, tests2-latest]

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath
      - run: TRAVIS_BUILD_NUMBER=true bin/test --force-colors --slow --timeout=595 --split=1/2

  # -------------------- Slow test split 2/2 ----------------------- #

  slow2:
    needs: [doctests-latest, tests1-latest, tests2-latest]

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath
      - run: TRAVIS_BUILD_NUMBER=true bin/test --force-colors --slow --timeout=595 --split=2/2

  # -------------------- Test split 1/2 older Python --------------- #

  tests1:
    needs: [doctests-latest, tests1-latest, tests2-latest]

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.10.0-rc.1 - 3.10', 'pypy-3.7']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath
      - run: bin/test --force-colors --split=1/2

  # -------------------- Test split 2/2 older Python --------------- #

  tests2:
    needs: [doctests-latest, tests1-latest, tests2-latest]

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.10.0-rc.1 - 3.10', 'pypy-3.7']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath
      - run: bin/test --force-colors --split=2/2

  # -------------------- Doctests older Python --------------------- #

  doctests:
    needs: [doctests-latest, tests1-latest, tests2-latest]

    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.10.0-rc.1 - 3.10', 'pypy-3.7']
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install --upgrade pip
      - run: pip install mpmath
      - run: bin/doctest --force-colors
      - run: examples/all.py -q

  # -------------------- Build the html/latex docs ----------------- #

  sphinx:
    needs: [doctests-latest, tests1-latest, tests2-latest]

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: release/aptinstall.sh
      - run: pip install -r release/requirements.txt
      - run: bin/test_sphinx.sh


  # -------------------- Check the error message under py2 --------- #

  py2-import:
    needs: [doctests-latest, tests1-latest, tests2-latest]

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '2.7'
      - run: bin/test_py2_import.py

  # -------- Run benchmarks against master and previous release ---- #

  benchmarks:
    needs: [doctests-latest, tests1-latest, tests2-latest]

    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          # Checkout repo with full history
          fetch-depth: 0
      - uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: pip install asv virtualenv
      - run: git submodule add https://github.com/sympy/sympy_benchmarks.git

        # Need to make sure we can access the branches from the main repo. We
        # will run benchmarks for the PR, for master and for the previous
        # release. The version branch names below should be updated once there
        # has been a newer release of sympy. The list of branches to check is
        # also specified in asv.conf.actions.json which should be updated as
        # well.

      - run: git remote add upstream https://github.com/sympy/sympy.git
      - run: git fetch upstream master
      - run: git fetch upstream 1.9

      - name: Configure benchmarks
        run: asv machine --yes --config asv.conf.actions.json

        # This is the slow part:
      - name: Run benchmarks
        run: asv run --config asv.conf.actions.json

        # Output benchmark results
      - run: asv compare upstream/master HEAD --config asv.conf.actions.json --factor 1.5 | tee pr_vs_master.txt
      - run: asv compare upstream/master HEAD --config asv.conf.actions.json --factor 1.5 --only-changed | tee pr_vs_master_changed.txt
      - run: asv compare upstream/1.9 upstream/master --config asv.conf.actions.json --factor 1.5 | tee master_vs_release.txt
      - run: asv compare upstream/1.9 upstream/master --config asv.conf.actions.json --factor 1.5 --only-changed | tee master_vs_release_changed.txt

        # This workflow does not have write permissions for the repository so
        # we save all outputs as artifacts that can be accessed by the
        # comment-on-pr workflow which is triggered by workflow_run to run when
        # this one completes.

      - name: Upload results as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: benchmarks
          path: |
            pr_vs_master.txt
            pr_vs_master_changed.txt
            master_vs_release.txt
            master_vs_release_changed.txt

  # -------------------- Save PR number ---------------------------- #

  save-pr-number:
    needs: [doctests-latest, tests1-latest, tests2-latest]

    # The comment-on-pr workflow needs the issue number of the PR to be able to
    # comment so we output that to a file and pass it over as an artifact.

    runs-on: ubuntu-20.04
    steps:
      - name: Write PR number to file
        if: ${{ github.event_name == 'pull_request' }}
        run: echo -n ${{ github.event.number }} > pr_number.txt

      - name: Write empty file for PR number
        if: ${{ github.event_name != 'pull_request' }}
        run: echo -n > pr_number.txt

      - name: Upload results as artifacts
        uses: actions/upload-artifact@v2
        with:
          name: pr_number
          path: pr_number.txt
